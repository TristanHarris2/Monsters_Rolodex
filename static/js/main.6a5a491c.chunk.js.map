{"version":3,"sources":["components/card/card.jsx","components/card-list/card-list.jsx","components/search-box/search-box.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","react_default","a","createElement","className","alt","src","concat","monster","id","name","email","CardList","monsters","map","card_Card","key","Searchbox","_ref","placeholder","handleChange","type","onChange","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","e","setState","searchFlield","target","value","state","_this2","fetch","then","response","json","users","_this$state","filteredMonsters","filter","toLowerCase","includes","search_box_Searchbox","card_list_CardList","Component","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App_0"],"mappings":"wRAIaA,SAAO,SAACC,GAAD,OAChBC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAQC,IAAI,UAAUC,IAAG,wBAAAC,OAA0BP,EAAMQ,QAAQC,GAAxC,eACxCR,EAAAC,EAAAC,cAAA,cAAMH,EAAMQ,QAAQE,KAApB,KACAT,EAAAC,EAAAC,cAAA,aAAMH,EAAMQ,QAAQG,MAApB,QCFKC,SAAW,SAAAZ,GAAK,OACzBC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACdJ,EAAMa,SAASC,IAAI,SAAAN,GAAO,OACvBP,EAAAC,EAAAC,cAACY,EAAD,CAAMC,IAAKR,EAAQC,GAAID,QAASA,SCL3BS,SAAY,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,YAAaC,EAAhBF,EAAgBE,aAAhB,OACrBnB,EAAAC,EAAAC,cAAA,SACAC,UAAU,SACViB,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCoCCG,qBArCb,SAAAA,IAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACZC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QAcFP,aAAe,SAAAW,GACbP,EAAKQ,SAAS,CAACC,aAAcF,EAAEG,OAAOC,SAbtCX,EAAKY,MAAQ,CACXvB,SAAU,GACVoB,aAAc,IALJT,mFASM,IAAAa,EAAAV,KAClBW,MAAM,8CACLC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAG,GAAK,OAAIL,EAAKL,SAAS,CAACnB,SAAU6B,uCAOjC,IAAAC,EAC6BhB,KAAKS,MAAjCvB,EADD8B,EACC9B,SAAUoB,EADXU,EACWV,aACZW,EAAmB/B,EAASgC,OAAO,SAAArC,GAAO,OAC9CA,EAAQE,KAAKoC,cAAcC,SAASd,EAAaa,iBAEnD,OACE7C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,gCACAF,EAAAC,EAAAC,cAAC6C,EAAD,CACE7B,YAAY,qBACZC,aAAcO,KAAKP,eAEvBnB,EAAAC,EAAAC,cAAC8C,EAAD,CAAUpC,SAAU+B,YAhCRM,cCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAvB,EAAA,GAAAQ,KAAAe,EAAAC,KAAA,UAAqBhB,KAAK,SAAArB,GAAiD,IAA9CsC,EAA8CtC,EAA9CsC,OAAQC,EAAsCvC,EAAtCuC,OAAQC,EAA8BxC,EAA9BwC,OAAQC,EAAsBzC,EAAtByC,OAAQC,EAAc1C,EAAd0C,QAC3DJ,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAQR,MCDDS,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHhE,EAAAC,EAAAC,cAACF,EAAAC,EAAMgE,WAAP,KACEjE,EAAAC,EAAAC,cAACgE,EAAD,QAOJhB","file":"static/js/main.6a5a491c.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './card.css'\r\n\r\nexport const Card = (props) => (\r\n    <div className='card-container'>\r\n        <img className='image' alt='monster' src={`https://robohash.org/${props.monster.id}?set=set2`} />\r\n        <h2> {props.monster.name} </h2>\r\n        <p> { props.monster.email } </p>\r\n    </div>\r\n)","import React from 'react';\r\n\r\nimport {Card} from '../card/card';\r\n\r\nimport './card-list.css';\r\n\r\nexport const CardList = props => (\r\n    <div className=\"card-list\">\r\n    {props.monsters.map(monster => (\r\n        <Card key={monster.id} monster={monster} />\r\n    ))}\r\n    </div>\r\n);\r\n","import React from 'react';\r\n\r\nimport './search-box.css';\r\n\r\nexport const Searchbox = ({ placeholder, handleChange }) => (\r\n    <input\r\n    className='search'\r\n    type='search' \r\n    placeholder={placeholder}\r\n    onChange={handleChange}/>\r\n)","import React, { Component } from 'react';\r\n\r\nimport { CardList } from './components/card-list/card-list';\r\nimport { Searchbox } from './components/search-box/search-box';\r\n\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      monsters: [],\r\n      searchFlield: ''\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch('https://jsonplaceholder.typicode.com/users')\r\n    .then(response => response.json())\r\n    .then(users => this.setState({monsters: users}));\r\n  }\r\n  \r\n  handleChange = e => {\r\n    this.setState({searchFlield: e.target.value})\r\n  }\r\n\r\n  render() {\r\n    const { monsters, searchFlield } =  this.state;\r\n    const filteredMonsters = monsters.filter(monster =>\r\n      monster.name.toLowerCase().includes(searchFlield.toLowerCase())\r\n      );\r\n    return (\r\n      <div className=\"App\">\r\n        <h1> Monsters Rolodex </h1>\r\n        <Searchbox\r\n          placeholder='Search monsters...' \r\n          handleChange={this.handleChange}\r\n        />\r\n      <CardList monsters={filteredMonsters} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}